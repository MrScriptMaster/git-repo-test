#!/usr/bin/perl
################################################################################
## Классический способ документирования в Perl является формат POD (от Plain
## Old Documentation). Этот формат используется Pod-трансляторами для преобразования
## в простой текст, HTML-страницы, man-страницы и др.
##
## Можно выделить следующие блоки:
##  - Простой параграф - в нем вы описываете некоторый блок кода или доносите свою мысль. 
##    В таком блоке можно использовать простые элементы форматирования, такие как полужирное
##    начертание, курсив и прочее.
##  - Дословный параграф - параграф, который обычно используется для написания
##    блока кода без переносов. Дословный параграф всегда начинается с символа
##    пробела или табуляции. В таком параграфе форматирование не доступно.
##  - POD-команда - это команда для POD интерпретатора. Команда всегда начинается
##    с символа '=', за которым следует идентификатор. Команда всегда должна начинаться с первой колонки.
##
## Доступные POD-команды
##  =pod
##  =head1 Заголовок первого уровня
##  =head2 Заголовок второго уровня
##  =head3 Заголовок третьего уровня
##  =head4 Заголовок четвертого уровня
##  =over <отступ>
##  =item Элемент списка
##  =back
##  =begin <идентификатор>
##  =end <идентификатор>
##  =for <идентификатор> Произвольный текст
##  =encoding <тип>
##  =cut
##
## ВНИМАНИЕ: интерпретаторы очень чувствительны к отсутствию пустых строк вокруг некоторых команд.
##
## Знаки форматирования
##   I<text>           курсивное начертание.
##   B<text>           полужирное начертание.
##   C<text>           моноширинное начертание.
##   L<text>           ссылка.
##   E<text>           используется для управляющих последовательностей.
##   F<text>           используется для формирования имен файлов в одном стиле.
##   S<text>           для формирования текста без переносов строк.
##   X<text>           большинством трансляторов игнорируется или на месте появляется пустая строка.
##                     Используется для создания индексных указателей.
##   Z<>               вводит символ нулевой ширины, который пишется следом. Используется довольно редко.
##
## Как генерировать POD-документацию?
##   POD можно интерпретировать Perl-утилитами, которые идут в комплекте:
##    - perldoc
##      $ perldoc <путь-к-файлу-где-есть-pod-разметка>
##    - pod2html
##      $ pod2html --outfile=file.html <путь-к-файлу-где-есть-pod-разметка>
##    - pod2text
##      $ pod2text <путь-к-файлу-где-есть-pod-разметка> > file.txt
##
## Если не отображается кириллица?
##   Убедитесь в том, какая кодировка задана командной оболочкой:
##   $ env
##   Укажите кодировку, которая поддерживает кириллицу. Например:
##   $ setenv LC_CTYPE ru_RU.KOI8-R
##
## Как проверить синтаксис?
##   Используйте утилиту podchecker:
##   $ podchecker
##
################################################################################

use strict;
use warnings;

hello();

sub hello {
    print "Hello, World!\n";
}

__END__

## =pod =cut
##   Говорит интерпретатору, что с этого места начинается POD-блок. Чтобы показать
##   конец блока, используется команда =cut с пустыми строками вокруг. =cut не нужна
##   большинству современных интерпретаторов, однако некоторые старые не будут без
##   нее работать корректно. =cut может применяться со всеми командами.
## 
## =over =item =back
##   Чтобы создать список, используется эта связка. 
##   =over позволяет обозначить начало региона, в котором будет создан список, каждый элемент которого
##   будет начинаться с =item. Блок должен завершаться командой =back. В этих блоках допустимо
##   использовать форматирование.
##
##   Команда =over имеет аргумент, которая сообщает отступ в пробелах от левого края для выравнивания
##   списка.
##
##   В отношении этого блока действуют следующие правила:
##    - нельзя использовать =item вне блока =over ... =back, если вы хотите создать список.
##    - после =over первой командой должна быть =item.
##    - в этом блоке нельзя использовать команду =head#.
##    - для формирования нумерованного списка после =item нужно использовать цифру с точкой.
##    - для формирования маркированного списка нужно использовать символ звездочки.
##    - для формирования произвольного списка используйте произвольные названия после команды.
##

=encoding UTF-8
=pod

=head1 Аннотация

Этот сценарий демонстрирует POD-синтаксис. Рекуомендуется всегда документировать большие
Perl-сценарии с помощью POD.

=head2 Подзаголовок второго уровня

Этот текст лежит в подзаголовке второго уровня.

Новый абзац. I<Italic> B<Bold> C<Monospace> F<filename>

S<Hello World!>

E<lt> E<gt> E<sol> E<verbar> E<181>

Z<>| Z<>< Z<>>

L<The Perl Home Page|http://www.perl.org/>

L<perlvar/$.>

L<hello doc|hello>

=head3 Подзаголовок третьего уровня

Этот текст лежит в подзаголовке третьего уровня.

=head4 Подзаголовок четвертого уровня

Этот текст лежит в подзаголовке четвертого уровня.

=cut

=head2 Нумерованный список

=over 3

=item 1.
Первый пункт списка

=item 2.
Второй пункт списка

=item 3.
Третий пункт списка

=back

=head2 Маркированный список

=over 3

=item *
Первый пункт маркированного списка

=item *
Второй пункт маркированного списка

=item *
Третий пункт маркированного списка

=back

=head2 Произвольный список

=over 1

=item Point 1

Some text

=item Point 2

Some text

=back

=head2 Многоуровневый список

=over 2

=item 1.
Apple

=over 4

=item 1.1.
Apple 1

=item 1.2.
Apple 2

=back

=item 2.
Pear

=over 4

=item 2.1.
Pear 1

=item 2.2.
Pear 2

=back

=back

=cut

## =for =begin =end
##  Позволяют вставить блоки для конкретного транслятора. =for Применяется только
##  для одного абзаца. Конструкция =begin ... =end применяется для блока.
##

=for html
<p>For <b>HTML</b> interpreter</p>

=begin html

<p>For <b>HTML</b> interpreter</p>

=end html

=begin text

    ---------------
    |  foo        |
    |        bar  |
    ---------------
  ^^^^ Figure 1. ^^^^

=end text

=cut

## Чтобы закомментировать некоторый текст не удаляя его, вы можете использовать
## такую конструкцию.
##

=for comment
Этот абзац закомментирован.

=begin comment

Этот абзац тоже закомментирован.

=end comment

=cut

## Для комментирования отдельно взятых функций используйте следующий шаблон
##

=over

=item hello()

Выводит надпись C<Hello, World!>.

=back

=cut
